// 
// // animation
// 	var sun = document.images[0];
// 	var moon = document.images[1];
// 	var earth = document.images[2];
// 	setInterval(draw,150);
// 
// 	function draw() {
// 		context.globalCompositeOperation = 'destination-over';
// 		context.clearRect(0,0,300,300); // clear canvas
// 
// 		context.fillStyle = 'rgba(0,0,0,0.4)';
// 		context.strokeStyle = 'rgba(0,153,255,0.4)';
// 		context.save();
// 		context.translate(150,150);
// 
// 		// Earth
// 		var time = new Date();
// 		context.rotate( ((2*Math.PI)/60)*time.getSeconds() + ((2*Math.PI)/60000)*time.getMilliseconds() );
// 		context.translate(105,0);
// 		context.fillRect(0,-12,50,24); // Shadow
// 		context.drawImage(earth,-12,-12);
// 
// 		// Moon
// 		context.save();
// 		context.rotate( ((2*Math.PI)/6)*time.getSeconds() + ((2*Math.PI)/6000)*time.getMilliseconds() );
// 		context.translate(0,28.5);
// 		context.drawImage(moon,-3.5,-3.5);
// 		context.restore();
// 
// 		context.restore();
// 
// 		context.beginPath();
// 		context.arc(150,150,105,0,Math.PI*2,false); // Earth orbit
// 		context.stroke();
// 
// 		context.drawImage(sun,0,0,300,300);
// 		log.info('animate: ' + time.getMilliseconds());
// 	}
// 	



# from https://developer.mozilla.org/En/Canvas_tutorial

$(function() {
	
	log.profile( 'canvas' ); // begin profiler

	// initializing my canvas
	var canvas = new Canvas('canvas');
	// alert(canvas.speak())
	
	var ctx = document.getElementById('canvas').getContext('2d');
	// squares
		ctx.fillStyle = "rgb(200,0,0)";
		ctx.fillRect (10, 10, 55, 50);
		ctx.fillStyle = "rgba(0, 0, 200, 0.5)";
		ctx.fillRect (30, 30, 55, 50);

  // hollow box
	  ctx.fillRect(25,25,100,100);
	  ctx.clearRect(45,45,60,60);
	  ctx.strokeRect(50,50,50,50);

	// triangle
		ctx.beginPath();
		ctx.moveTo(75,50);
		ctx.lineTo(100,75);
		ctx.lineTo(100,25);
		ctx.fill();

	// smiley
		ctx.beginPath();
		ctx.arc(75,75,50,0,Math.PI*2,true); // Outer circle
		ctx.moveTo(110,75);
		ctx.arc(75,75,35,0,Math.PI,false);   // Mouth (clockwise)
		ctx.moveTo(65,65);
		ctx.arc(60,65,5,0,Math.PI*2,true);  // Left eye
		ctx.moveTo(95,65);
		ctx.arc(90,65,5,0,Math.PI*2,true);  // Right eye
		ctx.stroke();
	
	// Filled triangle
		ctx.beginPath();
		ctx.moveTo(25,25);
		ctx.lineTo(105,25);
		ctx.lineTo(25,105);
		ctx.fill();

	// Stroked triangle
		ctx.beginPath();
		ctx.moveTo(125,125);
		ctx.lineTo(125,45);
		ctx.lineTo(45,125);
		ctx.closePath();
		ctx.stroke();

	// arc demo
		for (i=0;i<4;i++){
		  for(j=0;j<3;j++){
		    ctx.beginPath();
		    var x              = 25+j*50;               // x coordinate
		    var y              = 25+i*50;               // y coordinate
		    var radius         = 20;                    // Arc radius
		    var startAngle     = 0;                     // Starting point on circle
		    var endAngle       = Math.PI+(Math.PI*j)/2; // End point on circle
		    var anticlockwise  = i%2==0 ? false : true; // clockwise or anticlockwise

		    ctx.arc(x,y,radius,startAngle,endAngle, anticlockwise);

		    if (i>1){
		      ctx.fill();
		    } else {
		      ctx.stroke();
		    }
		  }
		}

	// Quadratric curves example
		ctx.beginPath();
		ctx.moveTo(75,25);
		ctx.quadraticCurveTo(25,25,25,62.5);
		ctx.quadraticCurveTo(25,100,50,100);
		ctx.quadraticCurveTo(50,120,30,125);
		ctx.quadraticCurveTo(60,120,65,100);
		ctx.quadraticCurveTo(125,100,125,62.5);
		ctx.quadraticCurveTo(125,25,75,25);
		ctx.stroke();

	// Bezier curves example
		ctx.beginPath();
		ctx.moveTo(75,40);
		ctx.bezierCurveTo(75,37,70,25,50,25);
		ctx.bezierCurveTo(20,25,20,62.5,20,62.5);
		ctx.bezierCurveTo(20,80,40,102,75,120);
		ctx.bezierCurveTo(110,102,130,80,130,62.5);
		ctx.bezierCurveTo(130,62.5,130,25,100,25);
		ctx.bezierCurveTo(85,25,75,37,75,40);
		ctx.fill();

	// for pacman next
		function roundedRect(ctx,x,y,width,height,radius){
		  ctx.beginPath();
		  ctx.moveTo(x,y+radius);
		  ctx.lineTo(x,y+height-radius);
		  ctx.quadraticCurveTo(x,y+height,x+radius,y+height);
		  ctx.lineTo(x+width-radius,y+height);
		  ctx.quadraticCurveTo(x+width,y+height,x+width,y+height-radius);
		  ctx.lineTo(x+width,y+radius);
		  ctx.quadraticCurveTo(x+width,y,x+width-radius,y);
		  ctx.lineTo(x+radius,y);
		  ctx.quadraticCurveTo(x,y,x,y+radius);
		  ctx.stroke();
		}

	// pacman
		roundedRect(ctx,12,12,150,150,15);
	  roundedRect(ctx,19,19,150,150,9);
	  roundedRect(ctx,53,53,49,33,10);
	  roundedRect(ctx,53,119,49,16,6);
	  roundedRect(ctx,135,53,49,33,10);
	  roundedRect(ctx,135,119,25,49,10);

	  ctx.beginPath();
	  ctx.arc(37,37,13,Math.PI/7,-Math.PI/7,true);
	  ctx.lineTo(31,37);
	  ctx.fill();
	  for(i=0;i<8;i++){
	    ctx.fillRect(51+i*16,35,4,4);
	  }
	  for(i=0;i<6;i++){
	    ctx.fillRect(115,51+i*16,4,4);
	  }
	  for(i=0;i<8;i++){
	    ctx.fillRect(51+i*16,99,4,4);
	  }
	  ctx.beginPath();
	  ctx.moveTo(83,116);
	  ctx.lineTo(83,102);
	  ctx.bezierCurveTo(83,94,89,88,97,88);
	  ctx.bezierCurveTo(105,88,111,94,111,102);
	  ctx.lineTo(111,116);
	  ctx.lineTo(106.333,111.333);
	  ctx.lineTo(101.666,116);
	  ctx.lineTo(97,111.333);
	  ctx.lineTo(92.333,116);
	  ctx.lineTo(87.666,111.333);
	  ctx.lineTo(83,116);
	  ctx.fill();
	  ctx.fillStyle = "white";
	  ctx.beginPath();
	  ctx.moveTo(91,96);
	  ctx.bezierCurveTo(88,96,87,99,87,101);
	  ctx.bezierCurveTo(87,103,88,106,91,106);
	  ctx.bezierCurveTo(94,106,95,103,95,101);
	  ctx.bezierCurveTo(95,99,94,96,91,96);
	  ctx.moveTo(103,96);
	  ctx.bezierCurveTo(100,96,99,99,99,101);
	  ctx.bezierCurveTo(99,103,100,106,103,106);
	  ctx.bezierCurveTo(106,106,107,103,107,101);
	  ctx.bezierCurveTo(107,99,106,96,103,96);
	  ctx.fill();
	  ctx.fillStyle = "black";
	  ctx.beginPath();
	  ctx.arc(101,102,2,0,Math.PI*2,true);
	  ctx.fill();
	  ctx.beginPath();
	  ctx.arc(89,102,2,0,Math.PI*2,true);
	  ctx.fill();
	
	// create chart image
		var img = new Image();
		img.src = '/images/application/backdrop.png';
		img.onload = function(){  
	    ctx.drawImage(img,0,0);
	    ctx.beginPath();
	    ctx.moveTo(30,96);
	    ctx.lineTo(70,66);
	    ctx.lineTo(103,76);
	    ctx.lineTo(170,15);
	    ctx.stroke();
		}
	
		var img = new Image();
		img.src = '/images/application/backdrop.png';
    img.onload = function(){
      for (i=0;i<4;i++){
        for (j=0;j<3;j++){
          ctx.drawImage(img,j*50,i*38,50,38);
        }
      }
    }

	log.profile( 'canvas' ); // end profiler

});